{"id":"v3Rv","dependencies":[{"name":"/mnt/c/Users/Saksham V/Desktop/gis-openlayer-webapp-narendraiiitl/package.json","includedInParent":true,"mtime":1596226207464},{"name":"./geom/GeometryType.js","loc":{"line":4,"column":25},"parent":"/mnt/c/Users/Saksham V/Desktop/gis-openlayer-webapp-narendraiiitl/ol/sphere.js","resolved":"/mnt/c/Users/Saksham V/Desktop/gis-openlayer-webapp-narendraiiitl/ol/geom/GeometryType.js"},{"name":"./math.js","loc":{"line":5,"column":37},"parent":"/mnt/c/Users/Saksham V/Desktop/gis-openlayer-webapp-narendraiiitl/ol/sphere.js","resolved":"/mnt/c/Users/Saksham V/Desktop/gis-openlayer-webapp-narendraiiitl/ol/math.js"}],"generated":{"js":"var $v3Rv$exports={};$parcel$require(\"v3Rv\",\"./geom/GeometryType.js\"),$parcel$require(\"v3Rv\",\"./math.js\");var $v3Rv$export$DEFAULT_RADIUS=6371008.8;function $v3Rv$export$getDistance(e,t,r){var $=r||$v3Rv$export$DEFAULT_RADIUS,v=$v3Rv$import$toRadians(e[1]),a=$v3Rv$import$toRadians(t[1]),o=(a-v)/2,n=$v3Rv$import$toRadians(t[0]-e[0])/2,R=Math.sin(o)*Math.sin(o)+Math.sin(n)*Math.sin(n)*Math.cos(v)*Math.cos(a);return 2*$*Math.atan2(Math.sqrt(R),Math.sqrt(1-R))}function $v3Rv$var$getLengthInternal(e,t){for(var r=0,$=0,v=e.length;$<v-1;++$)r+=$v3Rv$export$getDistance(e[$],e[$+1],t);return r}function $v3Rv$export$getLength(e,t){var r=t||{},$=r.radius||$v3Rv$export$DEFAULT_RADIUS,v=r.projection||\"EPSG:3857\",a=e.getType();a!==$v3Rv$import$GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(v,\"EPSG:4326\"));var o,n,R,p,s,i,m=0;switch(a){case $v3Rv$import$GeometryType.POINT:case $v3Rv$import$GeometryType.MULTI_POINT:break;case $v3Rv$import$GeometryType.LINE_STRING:case $v3Rv$import$GeometryType.LINEAR_RING:m=$v3Rv$var$getLengthInternal(o=e.getCoordinates(),$);break;case $v3Rv$import$GeometryType.MULTI_LINE_STRING:case $v3Rv$import$GeometryType.POLYGON:for(R=0,p=(o=e.getCoordinates()).length;R<p;++R)m+=$v3Rv$var$getLengthInternal(o[R],$);break;case $v3Rv$import$GeometryType.MULTI_POLYGON:for(R=0,p=(o=e.getCoordinates()).length;R<p;++R)for(s=0,i=(n=o[R]).length;s<i;++s)m+=$v3Rv$var$getLengthInternal(n[s],$);break;case $v3Rv$import$GeometryType.GEOMETRY_COLLECTION:var g=e.getGeometries();for(R=0,p=g.length;R<p;++R)m+=$v3Rv$export$getLength(g[R],t);break;default:throw new Error(\"Unsupported geometry type: \"+a)}return m}function $v3Rv$var$getAreaInternal(e,t){for(var r=0,$=e.length,v=e[$-1][0],a=e[$-1][1],o=0;o<$;o++){var n=e[o][0],R=e[o][1];r+=$v3Rv$import$toRadians(n-v)*(2+Math.sin($v3Rv$import$toRadians(a))+Math.sin($v3Rv$import$toRadians(R))),v=n,a=R}return r*t*t/2}function $v3Rv$export$getArea(e,t){var r=t||{},$=r.radius||$v3Rv$export$DEFAULT_RADIUS,v=r.projection||\"EPSG:3857\",a=e.getType();a!==$v3Rv$import$GeometryType.GEOMETRY_COLLECTION&&(e=e.clone().transform(v,\"EPSG:4326\"));var o,n,R,p,s,i,m=0;switch(a){case $v3Rv$import$GeometryType.POINT:case $v3Rv$import$GeometryType.MULTI_POINT:case $v3Rv$import$GeometryType.LINE_STRING:case $v3Rv$import$GeometryType.MULTI_LINE_STRING:case $v3Rv$import$GeometryType.LINEAR_RING:break;case $v3Rv$import$GeometryType.POLYGON:for(o=e.getCoordinates(),m=Math.abs($v3Rv$var$getAreaInternal(o[0],$)),R=1,p=o.length;R<p;++R)m-=Math.abs($v3Rv$var$getAreaInternal(o[R],$));break;case $v3Rv$import$GeometryType.MULTI_POLYGON:for(R=0,p=(o=e.getCoordinates()).length;R<p;++R)for(n=o[R],m+=Math.abs($v3Rv$var$getAreaInternal(n[0],$)),s=1,i=n.length;s<i;++s)m-=Math.abs($v3Rv$var$getAreaInternal(n[s],$));break;case $v3Rv$import$GeometryType.GEOMETRY_COLLECTION:var g=e.getGeometries();for(R=0,p=g.length;R<p;++R)m+=$v3Rv$export$getArea(g[R],t);break;default:throw new Error(\"Unsupported geometry type: \"+a)}return m}function $v3Rv$export$offset(e,t,r,$){var v=$||$v3Rv$export$DEFAULT_RADIUS,a=$v3Rv$import$toRadians(e[1]),o=$v3Rv$import$toRadians(e[0]),n=t/v,R=Math.asin(Math.sin(a)*Math.cos(n)+Math.cos(a)*Math.sin(n)*Math.cos(r)),p=o+Math.atan2(Math.sin(r)*Math.sin(n)*Math.cos(a),Math.cos(n)-Math.sin(a)*Math.sin(R));return[$v3Rv$import$toDegrees(p),$v3Rv$import$toDegrees(R)]}$v3Rv$exports.DEFAULT_RADIUS=$v3Rv$export$DEFAULT_RADIUS,$v3Rv$exports.getDistance=$v3Rv$export$getDistance,$v3Rv$exports.getLength=$v3Rv$export$getLength,$v3Rv$exports.getArea=$v3Rv$export$getArea,$v3Rv$exports.offset=$v3Rv$export$offset;"},"sourceMaps":null,"error":null,"hash":"8b3c790cdc02dc7975faba01bf96bc59","cacheData":{"env":{},"imports":{"$v3Rv$import$GeometryType":["./geom/GeometryType.js","default"],"$v3Rv$import$toDegrees":["./math.js","toDegrees"],"$v3Rv$import$toRadians":["./math.js","toRadians"]},"exports":{"DEFAULT_RADIUS":"$v3Rv$export$DEFAULT_RADIUS","getDistance":"$v3Rv$export$getDistance","getLength":"$v3Rv$export$getLength","getArea":"$v3Rv$export$getArea","offset":"$v3Rv$export$offset"},"wildcards":[],"sideEffects":false,"isES6Module":true}}